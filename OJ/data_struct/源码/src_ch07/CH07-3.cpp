/*********************************************
*  P230 算法7.3  希尔排序算法（快速插入排序算法）
**********************************************/
// 希尔排序算法：对长度为num的序列按关键字升序排序
// 参数说明：待排序序列为R[1..num]，Dist[0..len-1]为增量序列
// 待排序列从数组R下标为1的位置开始存储，数组R长度为num+1
// R[0]用于临时存储待插入的元素，从第二个位置处的记录开始排序

void sort_shell_insert (int R[], int num, int Dist[], int len)
{
    int i, k, dist, pos;

    // 根据增量数组的大小，执行len轮分组排序（组内采用直接插入排序）
    for(k = 0; k < len; ++k){ 
        dist = Dist[k];
        // 从第dist个元素开始，对dist个分组同时进行直接插入排序
        for( i = dist; i <= num; ++i ){            
            if( R[i] < R[i-dist] ){ 
                // 若R[i]小于该组有序序列的最大值，则查找R[i]的插入位置
                // 查找结束后移动元素，并完成对R[i]的插入
                R[0] = R[i];  // 仍然以R[0]作为监视哨
                // 在R[i]所在分组的有序子序列中寻找插入位置，同时数据后移
                for( pos = i-dist; (pos > 0) && (R[0] < R[pos]); pos = pos-dist ){
                    R[pos+dist] = R[pos]; 
                }
                R[pos+dist] = R[0];  // 将R[i]插入到正确位置
            } 
        } //end for( i = dist; i <= num; ++i )
    } //end for(k = 0; k < nd; ++k)
}