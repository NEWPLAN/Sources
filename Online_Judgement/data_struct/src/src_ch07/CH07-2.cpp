/*********************************************
*  P228 算法7.2  二分插入排序算法
**********************************************/

// 对长度为num的序列按关键字升序排序
// 序列从数组R下标为1的位置开始存储，数组长度为num+1
// R[0]用于临时存储待插入的元素，从第二个位置处的记录开始排序
void sort_binary_insert(int R[], int num){
    int i, low, mid, high, idx;
    for( i=2; i<=num; ++i ){
        R[0] = R[i];          // R[0]为监视哨
        low = 1; high = i-1;  // 设置折半查找的初始范围
        while( low <= high ){
            // 执行折半查找，确定插入位置
            mid = (low+high)/2;
            if( R[0] > R[mid] ){
                low = mid + 1;  // 插入位置在后半部份
            }  
            else {
                high = mid - 1;   /*插入位置在前半部分*/
            }
        }
        // 根据找到的插入位置，向后移动数据（为插入元素腾位置）
        for( idx = i-1; idx >= (high+1); idx--) {
            R[idx+1] = R[idx];
        }
        R[high+1] = R[0];  // 将当前记录插入到正确位置
    }
}